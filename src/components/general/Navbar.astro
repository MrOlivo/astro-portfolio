---
import {info} from "@data";
import {createLogo} from "@utils";
import NavItem from "./NavItem.astro";
---

<header
  class="container flex items-center justify-between h-[80px] sm:h-[123px]">
  <a
    class="text-2xl dark:text-light font-semibold dark:font-semibold font-outfit"
    href="/"
    >{createLogo(info.name)}.
  </a>
  <nav class="flex items-center">
    <button
      id="dropdownButton"
      data-dropdown-toggle="dropdown"
      class="rounded-lg order-first md:order-last p-4 ml-2 bg-slate-200 dark:focus:ring-white dark:bg-[#202020] dark:text-light focus:ring focus:outline-none focus:ring-sky-300 flex md:hidden items-center"
      type="button">
      <svg
        class="fill-current w-[18px] h-[18px]"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><title>Menu</title><path
          d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path></svg
      >
    </button>
    <!-- Dropdown menu -->
    <div
      id="dropdown"
      class="z-10 hidden w-56 right-4 origin-top-right translate-y-36 shadow-lg bg ring-1 ring-black ring-opacity-5 dark:bg-[#202020] md:dark:bg-dark md:ring-0 md:translate-x-0 md:translate-y-0 md:w-auto md:shadow-none py-4 bg-white md:flex md:items-center md:mt-0 rounded-lg">
      <ul class="flex flex-col gap-5 md:w-auto md:flex-row items-center">
        <NavItem text="Experiencia" link="#experience" />
        <NavItem text="EducaciÃ³n" link="#education" />
        <NavItem text="Proyectos" link="#projects" />
        <NavItem text="Contacto" link="#contact" />
      </ul>
    </div>
    <button
      aria-label="theme-button"
      id="theme-button"
      class="rounded-lg order-first md:order-last p-4 ml-2 bg-slate-100 dark:focus:ring-white dark:bg-[#202020] dark:text-light focus:ring focus:outline-none focus:ring-sky-300"
    ></button>
  </nav>
</header>

<script is:inline>
const moon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-moon"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>`;
const sun = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-sun"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>`;
const themeButton = document.getElementById("theme-button");
const browserTheme = document.querySelector('[name="theme-color"]');
let isDark;

const setDocumentAttributes = (dataTheme, themeIcon, browserColor) => {
  document.documentElement.setAttribute("data-theme", dataTheme);
  isDark = dataTheme === "light";
  themeButton.innerHTML = themeIcon;
  browserTheme.content = browserColor;
}

const theme = (() => {
  if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
    return localStorage.getItem("theme");
  }
  if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    return "dark";
  }
  return "light";
})();

if (theme === "light") {
  setDocumentAttributes("light", moon, "#FFFFFF")
} else {
  setDocumentAttributes("dark", sun, "#111111")
}
window.localStorage.setItem("theme", theme);

const darkModeHandler = () => {
  if (isDark) {
    setDocumentAttributes("dark", sun, "#111111")
    localStorage.theme = "dark";
  } else {
    setDocumentAttributes("light", moon, "#FFFFFF")
    localStorage.theme = "light";
  }
};

themeButton.addEventListener("click", darkModeHandler);
</script>

<script is:inline>
const dropdownButton = document.getElementById("dropdownButton");
const menu = document.getElementById("dropdown");
dropdownButton.addEventListener("click", () => {
  if (menu.classList.contains("hidden")) {
    menu.classList.replace("hidden", "absolute");
  } else {
    menu.classList.replace("absolute", "hidden");
  }
});
</script>
